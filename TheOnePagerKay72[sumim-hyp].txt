--- DISCLAIMER ---
Unofficial, lightly amended reconstruction of Alan Kay's 1972 "The One Pager" by sumim -- includes 
typo fixes, control-flow repairs, and reasoned adjustments (e.g., non-local return for "^").
For the unmodified original, see TheOnePagerKay72.txt or "The Early History of Smalltalk" (Kay, 1993),
Appendix II, Figure 11A.3 ("The One Pager"), available at, e.g.:
https://tinlizzie.org/VPRIPapers/hc_smalltalk_history.pdf
------------------

e (the environment) will be bound to the current Messenger object
result holds the result of a send, usually to be *applied* to next part of message

```
eval: if null(e●MSG●(e●PC))    then goto handlnil;
      if escape(e●MSG●(e●PC))  then goto escapes;
      if atom(e●MSG●(e●PC))    then 'result ← lookupvalue(e, e●MSG●(e●PC)); goto apply;
      if notlist(e●MSG●(e●PC)) then 'result ← e●MSG●(e●PC); goto apply;

evlist: 'e ← Table(CLASS,  MESSENGER,
                    SNDR,   e,
                    MSGR,   e●MSGR,
                    GLOBAL, e●GLOBAL,
                    SELF,   e●SELF,
                    PC,     1,
                    MSG,    e●MSG●(e●PC),
                    RTN,    APPLY);
        goto eval;

apply: e●'PC ← e●PC + 1;
       if e●PC > length(e●MSG) then goto dispatchrtn;
       if null(e●MSG●(e●PC)) then goto handlnil;
       if e●MSG●(e●PC) = '.  then e●'PC ← e●PC + 1; 'result ← NIL; goto eval;
       if e●MSG●(e●PC) = '»  then if result = FALSE
                                      then e●'PC ← e●PC + 2; goto eval;
                                      else e●'PC ← e●PC + 1;
                                           'e ← Table(CLASS,  MESSENGER,
                                                       SNDR,   e,
                                                       MSGR,   e●MSGR,
                                                       GLOBAL, e●GLOBAL,
                                                       SELF,   e●SELF,
                                                       PC,     1,
                                                       MSG,    e●MSG●(e●PC),
                                                       RTN,    FROMTRUE);
                                           goto eval;

'e ← Table(CLASS,  MESSENGER,
            SNDR,   e,
            MSGR,   e●SNDR,
            GLOBAL, e●GLOBAL,
            SELF,   result,
            PC,     1,
            MSG,    result●CLASS●CODE,
            RTN,    APPLY);
goto eval;

fromTRUE: 'e ← e●SNDR●SNDR; goto apply;

fromEVLB: e●MSGR●'PC ← e●PC - 1;
          putvalue(e●SNDR, e●p, result);
          'e ← e●SNDR; goto apply;

fromTHRU: 'e ← e●SNDR;
           if e●'RTN = FROMEVLB then goto dispatchrtn; else goto eval;

handlrtn: if e●MSG = e●SELF●CLASS●CODE then 'e ← e●SNDR; goto apply;
          'e ← e●SNDR; goto handlrtn;

handlnil: if e●MSG = e●SELF●CLASS●CODE then e●'RTN ← FROMTHRU;
          if goto apply;

dispatchrtn: select e●RTN
                    case APPLY:    'e ← e●SNDR; goto apply;
                    case FROMTRUE: goto fromTRUE;
                    case FROMEVLB: goto fromEVLB;
                    case FROMTHRU: goto fromTHRU;

escapes: e●'PC ← e●PC + 1;
         select e●MSG●(e●PC)
                 etc...
```

```
to ¤ (metacodefor(
        if e●MSGR●MSG●(e●MSGR●PC) = e●SNDR●MSG●(e●SNDR●PC)
                then bump(e●MSGR, PC); 'result ← TRUE;
                else 'result ← FALSE;
        goto apply; ))

to : p (⦂ p . metacodefor(
               'e ← Table(CLASS,  MESSENGER,
                           SNDR,   e,
                           MSGR,   e●MSGR,
                           GLOBAL, e●GLOBAL,
                           SELF,   e●MSGR●SELF,
                           PC,     e●MSGR●PC,
                           MSG,    e●MSGR●MSG,
                           RTN,    FROMEVLB);
               goto eval; ))

to ⦂ p v (metacodefor(
           e●'v ← e●MSGR●MSG●(e●MSGR●PC);
           bump(e●MSGR, PC);
           if null(e●'p ← e●SNDR●MSG●(e●SNDR●PC))
               then 'result ← e●v;
               else bump(e●SNDR, PC);
                    'result ← e●v; putvalue(e●SNDR, e●p, result);
           goto apply; ))


to ^ b (: b. metacodefor('result ← e●b; goto handlrtn;))
```